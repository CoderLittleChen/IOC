1、IOC  控制反转（Inserver  of  Control）  一般分为依赖注入（Dependency  Injection）和依赖查找（Dependency  Lookup）
2、规则
	高层次的模块不应该依赖于低层次的模块，他们都应该依赖于抽象
	抽象不应该依赖于具体，具体应该依赖于抽象
	对扩展开放  对修改关闭
3、控制反转的一种重要实现方式：将对依赖对象的创建和绑定转移到被依赖对象类的外部来实现

4、实现依赖注入有几种方式   构造函数注入   属性注入     接口注入
5、目前是使用手动的方式来创建依赖对象，对于大型项目来说，效率很低，这时候需要IOC容器，实际上是一个DI框架
6、常见的DI框架有 Ninject Untity
7、五大设计原则
	单一职责		开放封闭		里氏转换			接口分离		依赖倒置
